<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
<!--扫描controller组件-->
    <context:component-scan base-package="com.atguigu.crud.controller"></context:component-scan>

<!--配置视图解析器-->
    <bean id="viewResolver"
          class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean
                            class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
<!--    配置默认的 servlet处理静态资源-->
    <mvc:default-servlet-handler />
<!--    开启MVC的注解驱动-->
    <mvc:annotation-driven />
<!--    配置访问首页的视图控制器-->
    <mvc:view-controller path="/" view-name="index"></mvc:view-controller>
<!--配置文件上传处理器 必须设置id，且名字固定-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>
<!--配置拦截器-->
<!--    <mvc:interceptors>-->
<!--        &lt;!&ndash;三种配置方式：&ndash;&gt;-->
<!--        <bean class="com.atguigu.interceptor.FirstInterceptor"></bean>-->
<!--        <ref bean="firstInterceptor"></ref>-->
<!--        &lt;!&ndash; 以上两种配置方式都是对DispatcherServlet所处理的所有的请求进行拦截 &ndash;&gt;-->
<!--        <mvc:interceptor>-->
<!--            <mvc:mapping path="/**"/>-->
<!--            <mvc:exclude-mapping path="/testRequestEntity"/>-->
<!--            <ref bean="firstInterceptor"></ref>-->
<!--        </mvc:interceptor>-->
<!--        &lt;!&ndash;-->
<!--        以上配置方式可以通过ref或bean标签设置拦截器，通过mvc:mapping设置需要拦截的请求，通过-->
<!--        mvc:exclude-mapping设置需要排除的请求，即不需要拦截的请求
            /*表示上下文路径下的一层目录-->
<!--        &ndash;&gt;-->
<!--    </mvc:interceptors>-->
<!--配置异常处理器
    使用注解的方式可以不用配置，@controllerAdvice 将当前类（控制组件）标识为异常处理的组件，
    @ExceptionHandler(ArithmeticException.class) 设置要处理的异常类型
-->
<!--    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
<!--        <property name="exceptionMappings">-->
<!--            <props>-->
<!--&lt;!&ndash;                key表示要处理的异常，value表示跳转的逻辑视图&ndash;&gt;-->
<!--                <prop key="java.lang.ArithmeticException">error</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--&lt;!&ndash;        设置共享在请求域中的异常信息的属性名&ndash;&gt;-->
<!--        <property name="exceptionAttribute" value="ex"></property>-->
<!--    </bean>-->
</beans>